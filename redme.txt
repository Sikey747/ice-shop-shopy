при создании темы мы должны все переменные цветов шрифтов и прочего вынести в отдельные переменные.
Дальше в конфиге глобальных схеме создать нужные нам схемы настроек для цветов шрифтов и всего что может поменять пользователь по желанию окружночть и тд
Дальше мы связываем наши переменные css с теми значениямми что впишет пользователь в глобальную схему
таким образом мы получаем глобальные неастройки для темы которы нам нужны для css
и мы не можем пользоваться глобальными переменными из таилвинда или бутстрапа или обычные слова
так как они не связванны с настройками темы.


Папки файлы и их предназаначений
assets- сюда класть все картинки анимации видео скрипты и стили что могут быть нужны для темы
config - тут 2 фафла
 -data -- обновляеться автомастические когда мы что то меняем в загруженной теме он как место для храненния переменных
 -schema -- это как раз то где мы устанавливаем глобальные пеерменные для всей темы. К которым потом можем обращаться с любого места по этому желательно их как то выделить префиксом что бы понимать что это глобальная перемена потому как начало у всех у них setings.bg-color можно добавит -- что бы понимать что это глобальная переменная 
layouts - это повторяющиеся слои по факту надо только 1 слов но для месте где нам к примеру не нежен хедер или футтер можно создать новый слой где к примеру будт только один блок почторяться всегда
locales- разные языки можно сгенерировать автомастически и потом подправить в нужных местах. Редактируеться как в коде так и в клиенте шопифая
sections - основа всего тут мы деламе секции которые будут переиспольщоваться или быть уникальными. За периспользованость очвечает добавления пресета в схему секции.ТАк же в секции есть настроцки для самой секкции и для блоков внутри неё
snipets - это компоненты в которые можно прокиывать разные пеерменнче получая разные результаты на выходе. ЛУчще всегад писать обяснения снипета в коментариях сверух что бы понимать что надо пистаь что бы что то получть. Так же в снипиты надо хранить иконки. Можно как в 1 снипете где через свичб кейс их выбирвтаь или же каждую отдельно как удобно
tempalte - самая не понятая хрень это вроде как отдельная страница. И у шопифая есть как заарние сделанные обязательные страници так можно и добавить свои собственные страници. Но что бы странциа появиась надо созадть файл в формате json и туда указать хотя бы 1 секцию которая будет при открытиие странции а то странциа не появиться. Дальше можно будет убирать эту секцияю заменять и тд но важно что бы хотя бы 1 секция была в темплейте.

Нюансы
когда мы используем несколько js обектов на 1 странице то надо что бы у них были разыне незвания к примеру id секции или ограничть количестов 1 экземпларом что бы не было ошибок в коде

стили везде подключать вверху секции 
а скрипты в низу секции
при полном деплоии все по возможности заминемезировтаь

для всех картинок если они не указаны ставить плейсхолдеры
для всех секций указаывать дефолтын значениямми
и если нету блокв тоже показывать дефолтные блоки что бы человек видел что будет

Блоки в секциях это масивы и даже если у нас 10 типов блоков то все они будт лежать в 1 масиве по этому после перебора добавдять проверку что есил этот обек имеет нужны класс то можно дальше с ним работать и показыать его данные.

использовать популярыне библы js для решения проблем а не кастомыные сделаннык на коленке потому что будет каша

тае же скрипты должны всегад получать данные из data атрибутов.

если работать в команде то всегад забрать с ветки последнеи изминения а потмо отправлять.

делать бекапы перед подключениям всего.


----------------------------------------
Вопросы
как поменять язык 
как поменять валюту
работа с формами


----------
jquery
хорош... тем что код можно писать в меньше количество слов и более понятно
к примеру классы там менять атрибуты получать значения стилей и изменять их
+ простая анимация
но в целом все это монжно днлпть на чистом js особо без проблем 
особенно если найти хорошую простую библу бла анимаций то проблем особых не будет в принцпе
в остальноя я попробывал знаю как работает в чем смысл могу с ним работаь 

Анимация
Для простых анимаций подойдет вполне Aom так как там все просто и для большенства задачь подойдет
для постояяных анимацийобычный css а вот для анимаций по сложнее надо GSC

Если будет много анимаций то все лучше елать на GSCK 
там все довольно просто
качаешь плагин 
качаешь скролл тригер
дальше выбираешь обект 
указываешь какая конечная задача  и будет анимация
если надо можно указать в скрол тригере что бы анимация привязывалась в скролу и начинаалсь на разных этапах прокуртки
можно черех дата утрибуті менять скорость для паралакса
вобщем библа полностью подходит для таких простых анимаций и даже для сложных

можноподзаморочиться и сделать дата атрибуты с заготовленными анимациями 
и просто при попадании в тригер оно должны выполниться 
но это если надо будет как то оптимезировтаь анимации и уйти полностьб от АОС

Так же тут можно делать последовательность анимаций таймлайн

И того 5 простых часто нужных действия это
Анимация просто 
анимация при скроле
Анимациия при появлении обекта в кадре
анимация последовательная тацмлай
анимация паралаксом
все остально уже нужно от сулчия к случию

Ui библиотеки которые недо будет скачивать
свайпер
ренд
селект
валидация
анимация
звездынй рейтинг
лайтбоксы\галерея
акордион
модалка
тосты https://apvarun.github.io/toastify-js/
таблицы

Ui Kit для ванилы
почти все обычные компоненты можно сверстать самомоу или забрать с любой ui бибилиотеки так как там нету логики
сложны екомпоненты они так просто не делаються там много логики.

И тут 3 вараинт 
1. Писать самомоу долго скучно много багов
2. Найти норм библы на ванильном js или jquery если в проекте он используеться
3. если не страшен alpine js то можно его юзать . Но он тоже занимает метсо хотя не так уж и много. Но звато можно использовать ан его основе много готовых ui kit 
но alpine тоже не пацнацея тоже много нету по этому лучшая схема совмешать все.

что то с alpine чтото jquery что ванильное что то сам что то библа.
как варинт делать так
1. Когда разрабатываю сам то использовать alpine js для компоннетов а js для логики
2. Когда разрабатываю с кем то то обычные библиотеки


---------------------------------------
article
В принцепе ничеготяжолого но есть Нюансы
1. контент который вставляеться виз админки изначально обнулен по этому надо обратиться к нужным классам что бы
то что ввел пользователь в админке совпадало с тем что пользователь увидет в итоге на странице
2. можно блокировтаь коменты не показывать автора и время публикации надо на это тоже делать проверки включены ли эти флажки
3. Аватарки юзера нету что писал коменты
4. Пагинация не можетбыть отдельным снипетом так как она всегад привязаны к циклу что внутри него 
5. Стили пагинации можно перестилить а внутриности пеерписать через js
а так в основном обычна секция

При создании коментарие и в принцепе при работе с формами смотри что за инфу может принимать обект 
к примеру коментарий может принимать только 3 типа дыннх
имя
имеили
контент
все остально нельзя отправлять а что то генерируеться автоматически

404
особых проблем нету галавнео сделать json файл со снипетом

index
сделать json файл со снипетами 
и снимтельно следить за секциями что будут в итоге выбраны надо каждую секцию проработаь на переполнени и разные непонятные моменты
так же незабывать про деленеи на снипеты и уникальные модули js

Пагинация
Тут можно делать пагинацию 2 способами
1. Мы берем стандартный тег пагинации и просто пеерстилим все что не нравиться а тект меняем через js если надо
2. Мы в ручную пишем все через pagination.part pagination.next pagination.prev и дополняем логикой что когда мы на 1 странице то преведущего нет когда на последней последней нету когда на текущей то нельзя переключиться что когда больше 5 то мы загуржаем первый и второй и последние 2 а между ними пробел и на этот пробел тоже можно накинуть логику
как идно вторйо вариант это когда надо прям что то прям чоен запарное и неординарное
---------------------------
аякс
валидация без перезагурзки
пагинация без перезагрузки
сортировка
фильтрация
поиск
изминения данных без перезагрузки
смена языков перенос
метаполя
робота с апп
лейауты


-----------------------------------------------------------------
Темплейты 
созаються как страници для шопифая
они создаються в формате json если хотим их наполнять динамическим контентом
если не динамическим тоесть только то что мы напсиали то в формате liquid 
но чаще надо динамика по этому json
внутри мы пишем хотя бы 1 стартовую секцию которая должна быть на странице 
обычно принято называть её начиная со слова template-имя секцции tempalte-cart tempalte-index
некоторые темплейты даже нормально не заработают если не будет так подписаны
дальше создаем основую секцию с таким же навазнием и что бы её актевировать надо доавить 
в order этот Темплейты
Мы можем так сразу несколько секций добавить и блоков если это надо
насчет блоков если мы в json добавим блоки
с теми типами что были в секци то мы можем сделать так что бы при загурзке страници эти блоки уже были выбраны
и вних был како то контент

С секуиями похожая история только там чере схему все 
и что бы секция стала пеериспользуемой надо добавить её в пресет

-------------------------------------------
варианты сеток
1. Просто указываем количество колонок 
+ все стабильно
- новые блоки будут всегда с боку
2. если мы сами хотим контролировать количество блоков
то обычный варинт грида 
+ контроль грида
- новые блоки с боку
3. если мы незнаем сколько блоков будет авто фит или авто фил
но главео указать минимальное значение айтему карточке
+ ненадо париться о пеерзаполнении
4. Флекс
указываем изначально размеры айтему через flex 0 1 250px
 делаем разрешение переноситься
 justify-content - center
+ красивый грид который сам подстаиваеться хорошо подходит для центральных блоков
- надо значть изначальное значение айтема что в принцепе всегда известно
